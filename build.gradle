/*
 * Copyright 2014 toxbee.se
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task wrapper( type: Wrapper ) {
	gradleVersion = '1.10'
}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
	}
}

task cleanMaven(type: Delete) { delete 'maven-deploy' }
task cleanOutput(type: Delete) { delete 'classes' }

subprojects {
	apply plugin: 'java'
	apply plugin: 'maven-publish'

	task cleanAll(dependsOn: [clean, cleanMaven, cleanOutput]) {}

	group = "se.toxbee.fimpl"
	version = '0.1'

	// Used for testing:
	apply plugin: 'groovy'
	repositories {
		mavenCentral()
	}
	dependencies {
		testCompile 'cglib:cglib-nodep:2.1_3'
		testCompile 'org.objenesis:objenesis:1.1'
		testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
	}

	// javadoc.jar generation
	task sourceJar (type : Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	// sources.jar generation
	task javadocJar (type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	def getMavenArtifacts = {
		return [sourceJar, javadocJar]
	}

	publishing {
		repositories {
			maven {
				url uri( "../maven-deploy" )
			}
		}

		publications {
			maven (MavenPublication) {
				from components.java

				getMavenArtifacts().each { ar ->
					artifact( ar ) {
						classifier = ar.classifier
					}
				}

				def gitrepo = "toxbee/fimpl.git"
				def giturl = "http://github.com/${gitrepo}"
				def gitconn = "scm:git:git@github.com:${gitrepo}"

				pom.withXml {
					asNode().children().last() + {
						resolveStrategy = Closure.DELEGATE_FIRST
						name 'fimpl'
						description 'fimpl: find, query interface implementations + generate metadata.'
						url giturl
						scm {
							url giturl
							connection gitconn
							developerConnection gitconn
						}
						inceptionYear '2014'
						licenses {
							license {
								name 'The Apache Software License, Version 2.0'
								url 'http://www.apache.org/license/LICENSE-2.0.txt'
								distribution 'repo'
							}
						}
						developers {
							developer {
								id 'toxbee'
								name 'toxbee.se'
								email 'teamoxbee@gmail.com'
							}
							developer {
								id 'Centril'
								name 'Mazdak Farrokhzad'
								email 'twingoow@gmail.com'
							}
						}
					}
				}
			}
		}
	}

	build.finalizedBy publish
}

configure( subprojects.findAll { it.name != 'fimpl-common' } ) {
	apply plugin: 'shadow'

	def clazzifier = 'all'

	shadow {
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
		classifier clazzifier
	}

	def f = project.shadow.shadowJar

	publishing {
		publications {
			maven (MavenPublication) {
				artifact( f ) {
					classifier clazzifier
				}
			}
		}
	}

	task artifactShadow {
		dependsOn shadowJar
		artifacts {
			archives file: f
		}
	}

	publish {
		dependsOn artifactShadow
	}
}

configure( [project(':fimpl-api'), project(':fimpl-annotate')] ) {
	dependencies {
		compile project( ':fimpl-common' )
	}
}

project( ':fimpl-metainf' ) {
	dependencies {
		compile project( ':fimpl-api' )
	}
}